<launch>
    <arg name="ns"      default="robot_0" />

    <!-- EKF localization node. Takes IMU and wheel odometry to form a single
    localization estimate. This is the local filter providing the TF:
    ODOM -> BASE_LINK  -->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_odom" ns="$(arg ns)" >
        <rosparam   command="load"              file="$(find localization)/param/ekf_odom.yaml" />
        <param      name="map_frame"            value="/map" />
        <param      name="odom_frame"           value="$(arg ns)/odom" />
        <param      name="base_link_frame"      value="$(arg ns)/base_link" />
        <param      name="world_frame"          value="$(arg ns)/odom" />

    </node>

    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_map" ns="$(arg ns)" >
        <rosparam   command="load"              file="$(find localization)/param/ekf_map.yaml" />
        <param      name="map_frame"            value="/map" />
        <param      name="odom_frame"           value="$(arg ns)/odom" />
        <param      name="base_link_frame"      value="$(arg ns)/base_link" />
        <param      name="world_frame"          value="/map" />
        <rosparam param="initial_state">[-12.0,  -2.0,  0.0,
                            0.0,  0.0,  0,
                            0,  0,  0,
                            0.0,  0.0,  0.0,
                            0.0,  0.0,  0.0]</rosparam>
    </node>
</launch>